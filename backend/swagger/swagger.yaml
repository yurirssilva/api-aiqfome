openapi: 3.0.0
info:
  title: API - aiqfome
  version: 1.0.0
  description: Documentação da API para avaliação técnica - aiqfome
servers:
  - url: http://localhost:3001
paths:
  /usuario:
    post:
      summary: Cria um novo usuário
      tags: [Usuário]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password, role]
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: [admin, client]
      responses:
        '201':
          description: Usuário criado com sucesso
        '400':
          description: Erro de validação

  /usuarios:
    get:
      summary: Lista todos os usuários
      tags: [Usuário]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPublicDTO'
        '401':
          description: Não autenticado
        '403':
          description: Ação não permitida

  /usuario/{id}:
    put:
      summary: Atualiza dados do usuário
      tags: [Usuário]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Usuário atualizado com sucesso
        '400':
          description: Dados inválidos
        '401':
          description: Não autorizado

    delete:
      summary: Remove um usuário
      tags: [Usuário]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Usuário removido com sucesso
        '401':
          description: Não autorizado
        '403':
          description: Ação não permitida

  /login:
    post:
      summary: Realiza login e retorna o token e dados do usuário
      tags: [Autenticação]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token JWT de autenticação
                  user:
                    $ref: '#/components/schemas/UserPublicDTO'
        '401':
          description: Credenciais inválidas

  /favoritos:
    post:
      summary: Adiciona um produto à lista de favoritos
      tags: [Favoritos]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [id_product]
              properties:
                id_product:
                  type: number
      responses:
        '201':
          description: Produto adicionado aos favoritos
        '409':
          description: Produto já está na lista

    get:
      summary: Lista os produtos favoritos do usuário autenticado
      tags: [Favoritos]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de produtos favoritos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavoriteProductDTO'

  /favoritos/{idProduct}:
    delete:
      summary: Remove um produto dos favoritos
      tags: [Favoritos]
      security:
        - bearerAuth: []
      parameters:
        - name: idProduct
          in: path
          required: true
          schema:
            type: number
      responses:
        '204':
          description: Produto removido com sucesso
        '404':
          description: Produto não está na lista

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserPublicDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [admin, client]

    FavoriteProductDTO:
      type: object
      properties:
        title:
          type: string
        price:
          type: number
        description:
          type: string
        category:
          type: string
        image:
          type: string
        rating:
          type: object
          properties:
            rate:
              type: number
            count:
              type: number
